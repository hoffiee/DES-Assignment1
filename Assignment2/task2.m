% Clear all so there is no interference from older executions
clear all, clf, close all, clc, format compact




disp('================')
disp('Testcase fig 7.5')
disp('================')
P = create_automaton(...
        {'1','2','3','4','5','6'},...   % States
        '1',...         			% Initial state
        {'a','b','c','!d'},...   	% Events (Alphabet)
        {'1','a','2';...
        '2','b','4';...
        '5','b','4';...
        '1','c','3';...
        '2','!d','5';...
        '5','!d','6';...
        '3','!d','4'},...			% Transitions (source, event, target)
        {'4'});						% Marked states			
Sp = create_automaton(...
        {'1','2','3','4','5'},...   	% States
        '1',...         			% Initial state
        {'a', 'b','c','!d'},...   	% Events (Alphabet)
        {'1','a','2';...
         '2','b','4';...
         '5','b','4';...
         '1','c','3';...
         '2','!d','5';...
         '3','!d','4'},... % Transitions (source, event, target)
        {'4'});   % Marked states
corr_S_0 = create_automaton(...
        {'1.1','2.2','3.3','4.4','5.5'},...   % States
        '1.1',...         % Initial state
        {'a', 'b','c','!d'},...   % Events (Alphabet)
        {'1.1','a','2.2';...
         '2.2','b','4.4';...
         '5.5','b','4.4';...
         '1.1','c','3.3';...
         '3.3','!d','4.4';...
         '2.2','!d','5.5'},... % Transitions (source, event, target)
        {'4.4'});%...		 Marked states
       % {'2.2'});   	% Forbidden states?

corr_S = create_automaton(...
        {'1.1','3.3','4.4'},...   % States
        '1.1',...         % Initial state
        {'c','!d'},...   % Events (Alphabet)
        {'1.1','c','3.3';...
         '3.3','!d','4.4'},... % Transitions (source, event, target)
        {'4.4'});		% Marked states
          
% S_0=synch(P,Sp);

% S = safestatesynthesis(S_0.states, S_0.events, S_0.trans, S_0.marked, S_0.forbidden)

S_7_5 = supervisor(P,Sp,{'!d'})


disp('================')
disp('Testcase fig 7.7')
disp('================')
P = create_automaton(...
        {'p1','p2','p3','p4','p5','p6','p7','p8'},...   % States
        'p1',...                     % Initial state
        {'a','b','c','!d'},...      % Events (Alphabet)
        {'p1','a','p2';...
        'p5','a','p6';...
        'p2','b','p4';...
        'p6','b','p4';...
        'p1','c','p3';...
        'p2','!d','p5';...
        'p6','!d','p7';...
        'p7','!d','p8';...
        'p3','!d','p4'},...           % Transitions (source, event, target)
        {'p4'});                     % Marked states
Sp = create_automaton(...
        {'Sp1','Sp2','Sp3','Sp4','Sp5','Sp6','Sp7'},...       % States
        'Sp1',...                     % Initial state
        {'a', 'b','c','!d'},...     % Events (Alphabet)
        {'Sp1','a','Sp2';...
         'Sp5','a','Sp6';...
         'Sp2','b','Sp4';...
         'Sp6','b','Sp4';...
         'Sp1','c','Sp3';...
         'Sp2','!d','Sp5';...
         'Sp3','!d','Sp4';...
         'Sp6','!d','Sp7'},... % Transitions (source, event, target)
        {'Sp4'});   % Marked states

S=supervisor(P,Sp, {'b','!d'})


disp('=================')
disp('== Exam task 3 ==')
disp('=================')
P = create_automaton(...
        {'p1','p2','p3','p4','p5','p6','p7','p8','p9'},...   % States
        'p1',...                     % Initial state
        {'a','b','c','d','e'},...      % Events (Alphabet)
        {'p1','a','p2';...
        'p7','a','p6';...
        'p1','b','p4';...
        'p5','b','p6';...
        'p1','c','p3';...
        'p2','c','p5';...
        'p4','c','p7';...
        'p9','c','p8';...
        'p3','d','p6';...
        'p5','d','p6';...
        'p8','d','p6';...
        'p7','e','p9'});%...           % Transitions (source, event, target)
        % {'p4'});                     % Marked states
Sp = create_automaton(...
        {'Sp1','Sp2','Sp3','Sp4'},...       % States
        'Sp1',...                     % Initial state
        {'a', 'b','d'},...     % Events (Alphabet)
        {'Sp1','a','Sp2';...
         'Sp3','a','Sp4';...
         'Sp1','b','Sp3';...
         'Sp2','b','Sp4';...
         'Sp1','d','Sp4'},... % Transitions (source, event, target)
        {'Sp4'});   % Marked states

S=supervisor(P,Sp, {'d','e'})





